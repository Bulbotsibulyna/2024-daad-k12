{"frames":[{"func":"pacman::p_load(\"here\", \"tidyverse\", \"scales\", \"maEndToEnd\", \"pd.mogene.2.0.st\", \n    \"oligo\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"sapply(packages, p_load_single, install = install)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"lapply(X = X, FUN = FUN, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"FUN(X[[i]], ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"p_install(package, character.only = TRUE, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"try_bioc(package, update.bioconductor)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"suppressMessages(suppressWarnings(eval(parse(text = sprintf(\"BiocManager::install('%s', update = %s)\", \n    package, ifelse(update, \"TRUE\", \"FALSE\"))))))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(expr, message = function(c) if (inherits(c, \n    classes)) tryInvokeRestart(\"muffleMessage\"))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"suppressWarnings(eval(parse(text = sprintf(\"BiocManager::install('%s', update = %s)\", \n    package, ifelse(update, \"TRUE\", \"FALSE\")))))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(expr, warning = function(w) if (inherits(w, \n    classes)) tryInvokeRestart(\"muffleWarning\"))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(parse(text = sprintf(\"BiocManager::install('%s', update = %s)\", \n    package, ifelse(update, \"TRUE\", \"FALSE\"))))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(parse(text = sprintf(\"BiocManager::install('%s', update = %s)\", \n    package, ifelse(update, \"TRUE\", \"FALSE\"))))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"BiocManager::install(\"maEndToEnd\", update = FALSE)","file":"<text>","line_number":1,"end_line_number":1,"character_number":1,"end_character_number":50},{"func":".install(pkgs, vout[[\"out_of_date\"]], instPkgs = inst, repos = repos, \n    update = update, ask = ask, force = force, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".install_repos(pkgs, old_pkgs, instPkgs = instPkgs, lib = lib, \n    repos = repos, force = force, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".inet_install.packages(pkgs = doing, lib = lib, repos = repos, \n    ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers({\n    tryCatch({\n        install.packages(...)\n    }, error = function(e) { ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch({\n    install.packages(...)\n}, error = function(e) {\n    .inet_error(e) ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"value[[3L]](cond)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":".inet_error(e)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(e)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in unpackPkgZip(foundpkgs[okp, 2L], foundpkgs[okp, 1L], lib, libs_only,  : \n  ERROR: failed to lock directory ‘C:\\Users\\Sasha\\AppData\\Local\\R\\win-library\\4.4’ for modifying\nTry removing ‘C:\\Users\\Sasha\\AppData\\Local\\R\\win-library\\4.4/00LOCK’\n"}